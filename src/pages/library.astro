---
import Layout from "../layouts/Layout.astro";
import PocketBase from 'pocketbase';

// Connexion à PocketBase
const pb = new PocketBase('http://127.0.0.1:8090');

// Récupération de tous les SVGs sauvegardés
let svgs = [];
try {
    const records = await pb.collection('svgs').getFullList({
        sort: '-created', // Tri par date de création décroissante
    });
    svgs = records;
} catch (error) {
    console.error("Erreur lors de la récupération des SVGs:", error);
}
---
<Layout>
    <div class="min-h-screen bg-gradient-to-br from-purple-400 to-blue-500 p-8">
        <div class="max-w-7xl mx-auto">
            <div class="flex justify-between items-center mb-8">
                <h1 class="text-4xl font-bold text-white">SVG Library</h1>
                <a href="/generator" class="btn bg-purple-700 hover:bg-purple-800 text-white border-none">
                    ← Back to Generator
                </a>
            </div>

            {svgs.length === 0 ? (
                <div class="text-center py-20">
                    <p class="text-2xl text-white mb-4">No SVGs saved yet!</p>
                    <p class="text-lg text-white/80 mb-6">Start creating and saving SVGs to see them here.</p>
                    <a href="/generator" class="btn bg-purple-700 hover:bg-purple-800 text-white border-none">
                        Go to SVG Generator
                    </a>
                </div>
            ) : (
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {svgs.map((svg) => (
                        <div class="card bg-white shadow-xl hover:shadow-2xl transition-shadow">
                            <div class="card-body">
                                <h2 class="card-title text-gray-800">{svg.name}</h2>
                                <div class="bg-gray-50 rounded-lg p-4 h-48 flex items-center justify-center overflow-hidden">
                                    <div set:html={svg.code} class="max-w-full max-h-full" />
                                </div>
                                <div class="text-sm text-gray-500 mt-2">
                                    <p><strong>Created:</strong> {new Date(svg.created).toLocaleDateString()}</p>
                                    {svg.prompt && (
                                        <p class="mt-1"><strong>Prompt:</strong> {svg.prompt}</p>
                                    )}
                                </div>
                                <div class="card-actions justify-end mt-4">
                                    <button 
                                        class="btn btn-sm bg-blue-600 hover:bg-blue-700 text-white border-none"
                                        onclick={`navigator.clipboard.writeText(\`${svg.code.replace(/`/g, '\\`')}\`); alert('SVG code copied to clipboard!')`}
                                    >
                                        Copy Code
                                    </button>
                                    <button 
                                        class="btn btn-sm bg-red-600 hover:bg-red-700 text-white border-none"
                                        data-svg-id={svg.id}
                                        onclick={`deleteSVG('${svg.id}')`}
                                    >
                                        Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    </div>
</Layout>

<script>
    //@ts-nocheck
    
    async function deleteSVG(id) {
        if (!confirm('Are you sure you want to delete this SVG?')) {
            return;
        }

        try {
            const response = await fetch(`/api/deleteSVG`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id }),
            });

            const data = await response.json();

            if (data.success) {
                alert('SVG deleted successfully!');
                location.reload();
            } else {
                alert('Error: ' + data.error);
            }
        } catch (error) {
            alert('Error deleting SVG: ' + error.message);
        }
    }

    // Rendre la fonction globale
    window.deleteSVG = deleteSVG;
</script>